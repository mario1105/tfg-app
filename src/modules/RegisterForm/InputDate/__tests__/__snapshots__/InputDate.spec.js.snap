// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputDate when there are errors renders as expected 1`] = `
<div>
  <div
    className="makeStyles-formControlContainer-1"
  >
    <WithStyles(ForwardRef(FormControl))
      data-test-id="date-field-day-form-control"
      error={true}
    >
      <WithStyles(ForwardRef(InputLabel))>
        DD
      </WithStyles(ForwardRef(InputLabel))>
      <WithStyles(ForwardRef(Input))
        autoComplete="off"
        className="pureNumberInput"
        data-test-id="date-field-day-input"
        id="day-input"
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onInput={[Function]}
        type="number"
        value="11"
      />
    </WithStyles(ForwardRef(FormControl))>
    <WithStyles(ForwardRef(FormControl))
      data-test-id="date-field-month-form-control"
      error={true}
    >
      <WithStyles(ForwardRef(InputLabel))>
        MM
      </WithStyles(ForwardRef(InputLabel))>
      <WithStyles(ForwardRef(Input))
        autoComplete="off"
        className="pureNumberInput"
        data-test-id="date-field-month-input"
        id="month-input"
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onInput={[Function]}
        type="number"
        value="11"
      />
    </WithStyles(ForwardRef(FormControl))>
    <WithStyles(ForwardRef(FormControl))
      data-test-id="date-field-year-form-control"
      error={true}
    >
      <WithStyles(ForwardRef(InputLabel))>
        YYYY
      </WithStyles(ForwardRef(InputLabel))>
      <WithStyles(ForwardRef(Input))
        autoComplete="off"
        className="pureNumberInput"
        data-test-id="date-field-year-input"
        id="year-input"
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onInput={[Function]}
        type="number"
        value="1999"
      />
    </WithStyles(ForwardRef(FormControl))>
  </div>
  <WithStyles(ForwardRef(Typography))
    gutterBottom={true}
    style={
      Object {
        "color": "white",
      }
    }
    variant="subtitle2"
  >
    Date of Birth
  </WithStyles(ForwardRef(Typography))>
</div>
`;

exports[`InputDate when there are no errors renders as expected 1`] = `
<div>
  <div
    className="makeStyles-formControlContainer-1"
  >
    <WithStyles(ForwardRef(FormControl))
      data-test-id="date-field-day-form-control"
      error={false}
    >
      <WithStyles(ForwardRef(InputLabel))>
        DD
      </WithStyles(ForwardRef(InputLabel))>
      <WithStyles(ForwardRef(Input))
        autoComplete="off"
        className="pureNumberInput"
        data-test-id="date-field-day-input"
        id="day-input"
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onInput={[Function]}
        type="number"
        value="11"
      />
    </WithStyles(ForwardRef(FormControl))>
    <WithStyles(ForwardRef(FormControl))
      data-test-id="date-field-month-form-control"
      error={false}
    >
      <WithStyles(ForwardRef(InputLabel))>
        MM
      </WithStyles(ForwardRef(InputLabel))>
      <WithStyles(ForwardRef(Input))
        autoComplete="off"
        className="pureNumberInput"
        data-test-id="date-field-month-input"
        id="month-input"
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onInput={[Function]}
        type="number"
        value="11"
      />
    </WithStyles(ForwardRef(FormControl))>
    <WithStyles(ForwardRef(FormControl))
      data-test-id="date-field-year-form-control"
      error={false}
    >
      <WithStyles(ForwardRef(InputLabel))>
        YYYY
      </WithStyles(ForwardRef(InputLabel))>
      <WithStyles(ForwardRef(Input))
        autoComplete="off"
        className="pureNumberInput"
        data-test-id="date-field-year-input"
        id="year-input"
        onBlur={[Function]}
        onChange={null}
        onFocus={[Function]}
        onInput={[Function]}
        type="number"
        value="1999"
      />
    </WithStyles(ForwardRef(FormControl))>
  </div>
  <WithStyles(ForwardRef(Typography))
    gutterBottom={true}
    style={
      Object {
        "color": "white",
      }
    }
    variant="subtitle2"
  >
    Date of Birth
  </WithStyles(ForwardRef(Typography))>
</div>
`;
