// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Unit Tests Initial state renders as expected 1`] = `
<div
  className="makeStyles-loginBox-1"
>
  <WithStyles(ForwardRef(Typography))
    color="primary"
    data-test-id="login-form-header"
    style={
      Object {
        "marginBottom": "2em",
      }
    }
    variant="h5"
  >
    Login
  </WithStyles(ForwardRef(Typography))>
  <div
    style={
      Object {
        "display": "flex",
      }
    }
  >
    <form
      data-test-id="login-form"
      noValidate={true}
      onSubmit={[Function]}
    >
      <WithStyles(ForwardRef(FormControl))
        error={false}
        style={
          Object {
            "paddingRight": "38px",
          }
        }
      >
        <WithStyles(ForwardRef(InputLabel))
          htmlFor="my-input"
        >
          Email address
        </WithStyles(ForwardRef(InputLabel))>
        <WithStyles(ForwardRef(Input))
          autoComplete="off"
          data-test-id="login-form-email-input"
          disabled={false}
          onChange={[Function]}
          value=""
        />
      </WithStyles(ForwardRef(FormControl))>
      <WithStyles(ForwardRef(FormControl))
        error={false}
        style={
          Object {
            "paddingRight": "38px",
          }
        }
      >
        <WithStyles(ForwardRef(InputLabel))
          htmlFor="my-input"
        >
          Password
        </WithStyles(ForwardRef(InputLabel))>
        <WithStyles(ForwardRef(Input))
          autoComplete="off"
          data-test-id="login-form-password-input"
          disabled={false}
          onChange={[Function]}
          type="password"
          value=""
        />
      </WithStyles(ForwardRef(FormControl))>
    </form>
    <WithStyles(ForwardRef(Button))
      color="primary"
      data-test-id="login-form-sign-in-button"
      disabled={true}
      fullWidth={true}
      onClick={[Function]}
      style={
        Object {
          "maxHeight": "96px",
        }
      }
      variant="contained"
    >
      Sign in
    </WithStyles(ForwardRef(Button))>
  </div>
</div>
`;

exports[`Login Unit Tests when there are errors renders as expected 1`] = `
<div
  className="makeStyles-loginBox-1"
>
  <WithStyles(ForwardRef(Typography))
    color="primary"
    data-test-id="login-form-header"
    style={
      Object {
        "marginBottom": "2em",
      }
    }
    variant="h5"
  >
    Login
  </WithStyles(ForwardRef(Typography))>
  <div
    style={
      Object {
        "display": "flex",
      }
    }
  >
    <form
      data-test-id="login-form"
      noValidate={true}
      onSubmit={[Function]}
    >
      <WithStyles(ForwardRef(FormControl))
        error={true}
        style={
          Object {
            "paddingRight": "38px",
          }
        }
      >
        <WithStyles(ForwardRef(InputLabel))
          htmlFor="my-input"
        >
          Email address
        </WithStyles(ForwardRef(InputLabel))>
        <WithStyles(ForwardRef(Input))
          autoComplete="off"
          data-test-id="login-form-email-input"
          disabled={false}
          onChange={[Function]}
          value="mario.jimenez@theshopworks.com"
        />
      </WithStyles(ForwardRef(FormControl))>
      <WithStyles(ForwardRef(FormControl))
        error={true}
        style={
          Object {
            "paddingRight": "38px",
          }
        }
      >
        <WithStyles(ForwardRef(InputLabel))
          htmlFor="my-input"
        >
          Password
        </WithStyles(ForwardRef(InputLabel))>
        <WithStyles(ForwardRef(Input))
          autoComplete="off"
          data-test-id="login-form-password-input"
          disabled={false}
          onChange={[Function]}
          type="password"
          value="1q2w3e"
        />
        <WithStyles(ForwardRef(FormHelperText))
          data-test-id="login-form-error"
        >
          Email and/or password does not match
        </WithStyles(ForwardRef(FormHelperText))>
      </WithStyles(ForwardRef(FormControl))>
    </form>
    <WithStyles(ForwardRef(Button))
      color="primary"
      data-test-id="login-form-sign-in-button"
      disabled={false}
      fullWidth={true}
      onClick={[Function]}
      style={
        Object {
          "maxHeight": "96px",
        }
      }
      variant="contained"
    >
      Sign in
    </WithStyles(ForwardRef(Button))>
  </div>
</div>
`;

exports[`Login Unit Tests when there are no errors renders as expected 1`] = `
<div
  className="makeStyles-loginBox-1"
>
  <WithStyles(ForwardRef(Typography))
    color="primary"
    data-test-id="login-form-header"
    style={
      Object {
        "marginBottom": "2em",
      }
    }
    variant="h5"
  >
    Login
  </WithStyles(ForwardRef(Typography))>
  <div
    style={
      Object {
        "display": "flex",
      }
    }
  >
    <form
      data-test-id="login-form"
      noValidate={true}
      onSubmit={[Function]}
    >
      <WithStyles(ForwardRef(FormControl))
        error={false}
        style={
          Object {
            "paddingRight": "38px",
          }
        }
      >
        <WithStyles(ForwardRef(InputLabel))
          htmlFor="my-input"
        >
          Email address
        </WithStyles(ForwardRef(InputLabel))>
        <WithStyles(ForwardRef(Input))
          autoComplete="off"
          data-test-id="login-form-email-input"
          disabled={false}
          onChange={[Function]}
          value="mario.jimenez@theshopworks.com"
        />
      </WithStyles(ForwardRef(FormControl))>
      <WithStyles(ForwardRef(FormControl))
        error={false}
        style={
          Object {
            "paddingRight": "38px",
          }
        }
      >
        <WithStyles(ForwardRef(InputLabel))
          htmlFor="my-input"
        >
          Password
        </WithStyles(ForwardRef(InputLabel))>
        <WithStyles(ForwardRef(Input))
          autoComplete="off"
          data-test-id="login-form-password-input"
          disabled={false}
          onChange={[Function]}
          type="password"
          value="1q2w3e"
        />
      </WithStyles(ForwardRef(FormControl))>
    </form>
    <WithStyles(ForwardRef(Button))
      color="primary"
      data-test-id="login-form-sign-in-button"
      disabled={false}
      fullWidth={true}
      onClick={[Function]}
      style={
        Object {
          "maxHeight": "96px",
        }
      }
      variant="contained"
    >
      Sign in
    </WithStyles(ForwardRef(Button))>
  </div>
</div>
`;
